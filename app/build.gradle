apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

Properties projProps = new Properties()
projProps.load(project.rootProject.file('project.properties').newDataInputStream())

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "io.chthonic.price_converter"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode = projProps.getProperty("versionCode")
        versionName = projProps.getProperty("versionName")
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "default"
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "ANALYTICS_ENABLED", ((projProps.getProperty("debugAnalytics") as Integer == 1) ? "true" : "false")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "ANALYTICS_ENABLED", "true"
        }
    }
    productFlavors {
        dev {
            applicationIdSuffix = ".dev"
            resValue "string", "app_name", (projProps.getProperty("appName") + "_dev")
            resValue "string", "leak_canary_display_activity_label", (projProps.getProperty("appName") + "_dev_leaks")
        }
        beta {
            applicationIdSuffix = ".beta"
            resValue "string", "app_name", (projProps.getProperty("appName") + "_beta")
            resValue "string", "leak_canary_display_activity_label", (projProps.getProperty("appName") + "_beta_leaks")
        }
        prod {
            resValue "string", "app_name", projProps.getProperty("appName")
            resValue "string", "leak_canary_display_activity_label", (projProps.getProperty("appName") + "_leaks")
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
    maven { url 'http://dl.bintray.com/amulyakhare/maven' }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    // support
    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:design:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:percent:${rootProject.ext.supportLibVersion}"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5'

    // dependency injection
    implementation 'com.github.salomonbrys.kodein:kodein:4.1.0'

    // rxjava2
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'
    implementation "com.github.akarnokd:rxjava2-extensions:0.18.9"
    implementation 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.1.1'

    // json
    implementation 'com.squareup.moshi:moshi:1.5.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.5.0'

    // rest
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    // redux
    implementation 'com.yheriatovych:reductor:0.14.0'
    implementation 'com.yheriatovych:reductor-rxjava:0.14.0'
    kapt 'com.yheriatovych:reductor-processor:0.14.0'

    // mvp
    implementation ('io.chthonic.mythos:mythos:0.9.3') {
        exclude group: 'org.jetbrains'
    }

    // ui
    implementation 'com.wang.avi:library:2.1.3'
    api 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

    // form validate
    implementation 'com.github.deadpixelsociety:passport:1.0.1'

    // dev utils
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    debugImplementation 'com.facebook.stetho:stetho:1.5.0'
    debugImplementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    implementation 'com.github.ajalt:timberkt:1.3.0'

    // testing
    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
//    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })
//    testImplementation "org.robolectric:robolectric:3.8"
}